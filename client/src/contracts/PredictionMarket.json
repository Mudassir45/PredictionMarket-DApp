{
  "contractName": "PredictionMarket",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "enum PredictionMarket.Side",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "bets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "enum PredictionMarket.Side",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "betsPerGambler",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "enum PredictionMarket.Side",
          "name": "_side",
          "type": "uint8"
        }
      ],
      "name": "placeBet",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "withdrawGain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum PredictionMarket.Side",
          "name": "_winner",
          "type": "uint8"
        },
        {
          "internalType": "enum PredictionMarket.Side",
          "name": "_loser",
          "type": "uint8"
        }
      ],
      "name": "reportResult",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"enum PredictionMarket.Side\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"bets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum PredictionMarket.Side\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"betsPerGambler\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum PredictionMarket.Side\",\"name\":\"_side\",\"type\":\"uint8\"}],\"name\":\"placeBet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum PredictionMarket.Side\",\"name\":\"_winner\",\"type\":\"uint8\"},{\"internalType\":\"enum PredictionMarket.Side\",\"name\":\"_loser\",\"type\":\"uint8\"}],\"name\":\"reportResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawGain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/D/Projects for Resume/Decentralized Prediction Market/contracts/PredictionMarket.sol\":\"PredictionMarket\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/Projects for Resume/Decentralized Prediction Market/contracts/PredictionMarket.sol\":{\"keccak256\":\"0x2d7d47b5df4fd12852272a9866c0ddc4cd62696101e9a834539cb61560ee69c1\",\"urls\":[\"bzz-raw://9811c653b5952ee5841ade1107e69026aaa6edae54546b395950bfd255e3396b\",\"dweb:/ipfs/QmY3eQYGCyK4mvcjQHh5cWVFyR7RKum2QRGFG6QQm4awWc\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516108a63803806108a68339818101604052602081101561003357600080fd5b810190808051906020019092919050505080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610811806100956000396000f3fe6080604052600436106100555760003560e01c80632b539c861461005a57806343046844146100715780634ec942b7146100a25780637dc0d1d0146100ed5780637e0ecc001461012e5780639d5a373914610180575b600080fd5b34801561006657600080fd5b5061006f6101f2565b005b6100a06004803603602081101561008757600080fd5b81019080803560ff169060200190929190505050610516565b005b3480156100ae57600080fd5b506100eb600480360360408110156100c557600080fd5b81019080803560ff169060200190929190803560ff16906020019092919050505061064d565b005b3480156100f957600080fd5b50610102610778565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561013a57600080fd5b5061016a6004803603602081101561015157600080fd5b81019080803560ff16906020019092919050505061079e565b6040518082815260200191505060405180910390f35b34801561018c57600080fd5b506101dc600480360360408110156101a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff1690602001909291905050506107b6565b6040518082815260200191505060405180910390f35b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008060000160009054906101000a900460ff16600181111561025257fe5b600181111561025d57fe5b8152602001908152602001600020549050600081116102e4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f796f7520646f206e6f74206861766520616e792077696e6e696e67206265740081525060200191505060405180910390fd5b60011515600160009054906101000a900460ff1615151461036d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f656c656374696f6e206e6f742066696e6973686564207965740000000000000081525060200191505060405180910390fd5b6000600260008060000160009054906101000a900460ff16600181111561039057fe5b600181111561039b57fe5b81526020019081526020016000205482600260008060000160019054906101000a900460ff1660018111156103cc57fe5b60018111156103d757fe5b81526020019081526020016000205402816103ee57fe5b04820190506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080600181111561044257fe5b600181111561044d57fe5b8152602001908152602001600020819055506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001808111156104ae57fe5b60018111156104b957fe5b8152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610511573d6000803e3d6000fd5b505050565b60001515600160009054906101000a900460ff1615151461059f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f656c656374696f6e2069732066696e697368656400000000000000000000000081525060200191505060405180910390fd5b34600260008360018111156105b057fe5b60018111156105bb57fe5b81526020019081526020016000206000828254019250508190555034600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083600181111561062457fe5b600181111561062f57fe5b81526020019081526020016000206000828254019250508190555050565b3373ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610710576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f6f6e6c79206f7261636c6500000000000000000000000000000000000000000081525060200191505060405180910390fd5b816000800160006101000a81548160ff0219169083600181111561073057fe5b0217905550806000800160016101000a81548160ff0219169083600181111561075557fe5b021790555060018060006101000a81548160ff0219169083151502179055505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b600360205281600052604060002060205280600052604060002060009150915050548156fea2646970667358221220bdc0f58d05c14dc1397fe35d93d97f68fac2e0b7d58257628cf0d38c36ba55f564736f6c63430007010033",
  "deployedBytecode": "0x6080604052600436106100555760003560e01c80632b539c861461005a57806343046844146100715780634ec942b7146100a25780637dc0d1d0146100ed5780637e0ecc001461012e5780639d5a373914610180575b600080fd5b34801561006657600080fd5b5061006f6101f2565b005b6100a06004803603602081101561008757600080fd5b81019080803560ff169060200190929190505050610516565b005b3480156100ae57600080fd5b506100eb600480360360408110156100c557600080fd5b81019080803560ff169060200190929190803560ff16906020019092919050505061064d565b005b3480156100f957600080fd5b50610102610778565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561013a57600080fd5b5061016a6004803603602081101561015157600080fd5b81019080803560ff16906020019092919050505061079e565b6040518082815260200191505060405180910390f35b34801561018c57600080fd5b506101dc600480360360408110156101a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff1690602001909291905050506107b6565b6040518082815260200191505060405180910390f35b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008060000160009054906101000a900460ff16600181111561025257fe5b600181111561025d57fe5b8152602001908152602001600020549050600081116102e4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f796f7520646f206e6f74206861766520616e792077696e6e696e67206265740081525060200191505060405180910390fd5b60011515600160009054906101000a900460ff1615151461036d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f656c656374696f6e206e6f742066696e6973686564207965740000000000000081525060200191505060405180910390fd5b6000600260008060000160009054906101000a900460ff16600181111561039057fe5b600181111561039b57fe5b81526020019081526020016000205482600260008060000160019054906101000a900460ff1660018111156103cc57fe5b60018111156103d757fe5b81526020019081526020016000205402816103ee57fe5b04820190506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080600181111561044257fe5b600181111561044d57fe5b8152602001908152602001600020819055506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006001808111156104ae57fe5b60018111156104b957fe5b8152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610511573d6000803e3d6000fd5b505050565b60001515600160009054906101000a900460ff1615151461059f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f656c656374696f6e2069732066696e697368656400000000000000000000000081525060200191505060405180910390fd5b34600260008360018111156105b057fe5b60018111156105bb57fe5b81526020019081526020016000206000828254019250508190555034600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083600181111561062457fe5b600181111561062f57fe5b81526020019081526020016000206000828254019250508190555050565b3373ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610710576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f6f6e6c79206f7261636c6500000000000000000000000000000000000000000081525060200191505060405180910390fd5b816000800160006101000a81548160ff0219169083600181111561073057fe5b0217905550806000800160016101000a81548160ff0219169083600181111561075557fe5b021790555060018060006101000a81548160ff0219169083151502179055505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b600360205281600052604060002060205280600052604060002060009150915050548156fea2646970667358221220bdc0f58d05c14dc1397fe35d93d97f68fac2e0b7d58257628cf0d38c36ba55f564736f6c63430007010033",
  "immutableReferences": {},
  "sourceMap": "27:1241:1:-:0;;;327:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;372:7;363:6;;:16;;;;;;;;;;;;;;;;;;327:59;27:1241;;;;;;",
  "deployedSourceMap": "27:1241:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;600:456;;;;;;;;;;;;;:::i;:::-;;392:202;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1062:203;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;299:21;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;193:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;231:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;600:456;640:15;658:14;:26;673:10;658:26;;;;;;;;;;;;;;;:41;685:6;:13;;;;;;;;;;;;658:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;640:59;;727:1;714:10;:14;706:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;801:4;781:24;;:16;;;;;;;;;;;:24;;;773:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;842:9;901:4;:19;906:6;:13;;;;;;;;;;;;901:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;888:10;867:4;:18;872:6;:12;;;;;;;;;;;;867:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;:31;:53;;;;;;854:10;:66;842:78;;968:1;927:14;:26;942:10;927:26;;;;;;;;;;;;;;;:38;954:10;927:38;;;;;;;;;;;;;;;;;;;;;;;;;;;:42;;;;1017:1;976:14;:26;991:10;976:26;;;;;;;;;;;;;;;:38;1003:10;976:38;;;;;;;;;;;;;;;;;;;;;;;;;;;:42;;;;1025:10;:19;;:25;1045:4;1025:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;600:456;;:::o;392:202::-;474:5;454:25;;:16;;;;;;;;;;;:25;;;446:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;526:9;511:4;:11;516:5;511:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;579:9;542:14;:26;557:10;542:26;;;;;;;;;;;;;;;:33;569:5;542:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;:46;;;;;;;;;;;392:202;:::o;1062:203::-;1145:10;1135:20;;:6;;;;;;;;;;;:20;;;1127:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1194:7;1178:6;:13;;;:23;;;;;;;;;;;;;;;;;;;;;;;;1223:6;1208;:12;;;:21;;;;;;;;;;;;;;;;;;;;;;;;1255:4;1236:16;;:23;;;;;;;;;;;;;;;;;;1062:203;;:::o;299:21::-;;;;;;;;;;;;;:::o;193:33::-;;;;;;;;;;;;;;;;;:::o;231:63::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.7.1;\r\n\r\ncontract PredictionMarket {\r\n  enum Side { Biden, Trump }\r\n  struct Result {\r\n    Side winner;\r\n    Side loser;\r\n  }\r\n  Result result;\r\n  bool electionFinished;\r\n\r\n  mapping(Side => uint) public bets;\r\n  mapping(address => mapping(Side => uint)) public betsPerGambler;\r\n  address public oracle;\r\n\r\n  constructor(address _oracle) {\r\n    oracle = _oracle; \r\n  }\r\n\r\n  function placeBet(Side _side) external payable {\r\n    require(electionFinished == false, 'election is finished');\r\n    bets[_side] += msg.value;\r\n    betsPerGambler[msg.sender][_side] += msg.value;\r\n  }\r\n\r\n  function withdrawGain() external {\r\n    uint gamblerBet = betsPerGambler[msg.sender][result.winner];\r\n    require(gamblerBet > 0, 'you do not have any winning bet');  \r\n    require(electionFinished == true, 'election not finished yet');\r\n    uint gain = gamblerBet + bets[result.loser] * gamblerBet / bets[result.winner];\r\n    betsPerGambler[msg.sender][Side.Biden] = 0;\r\n    betsPerGambler[msg.sender][Side.Trump] = 0;\r\n    msg.sender.transfer(gain);\r\n  }\r\n\r\n  function reportResult(Side _winner, Side _loser) external {\r\n    require(oracle == msg.sender, 'only oracle');\r\n    result.winner = _winner;\r\n    result.loser = _loser;\r\n    electionFinished = true;\r\n  }\r\n}",
  "sourcePath": "D:/Projects for Resume/Decentralized Prediction Market/contracts/PredictionMarket.sol",
  "ast": {
    "absolutePath": "/D/Projects for Resume/Decentralized Prediction Market/contracts/PredictionMarket.sol",
    "exportedSymbols": {
      "PredictionMarket": [
        207
      ]
    },
    "id": 208,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 38,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 207,
        "linearizedBaseContracts": [
          207
        ],
        "name": "PredictionMarket",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "PredictionMarket.Side",
            "id": 41,
            "members": [
              {
                "id": 39,
                "name": "Biden",
                "nodeType": "EnumValue",
                "src": "70:5:1"
              },
              {
                "id": 40,
                "name": "Trump",
                "nodeType": "EnumValue",
                "src": "77:5:1"
              }
            ],
            "name": "Side",
            "nodeType": "EnumDefinition",
            "src": "58:26:1"
          },
          {
            "canonicalName": "PredictionMarket.Result",
            "id": 46,
            "members": [
              {
                "constant": false,
                "id": 43,
                "mutability": "mutable",
                "name": "winner",
                "nodeType": "VariableDeclaration",
                "scope": 46,
                "src": "109:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Side_$41",
                  "typeString": "enum PredictionMarket.Side"
                },
                "typeName": {
                  "id": 42,
                  "name": "Side",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 41,
                  "src": "109:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$41",
                    "typeString": "enum PredictionMarket.Side"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45,
                "mutability": "mutable",
                "name": "loser",
                "nodeType": "VariableDeclaration",
                "scope": 46,
                "src": "127:10:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Side_$41",
                  "typeString": "enum PredictionMarket.Side"
                },
                "typeName": {
                  "id": 44,
                  "name": "Side",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 41,
                  "src": "127:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$41",
                    "typeString": "enum PredictionMarket.Side"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Result",
            "nodeType": "StructDefinition",
            "scope": 207,
            "src": "88:55:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 48,
            "mutability": "mutable",
            "name": "result",
            "nodeType": "VariableDeclaration",
            "scope": 207,
            "src": "147:13:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Result_$46_storage",
              "typeString": "struct PredictionMarket.Result"
            },
            "typeName": {
              "id": 47,
              "name": "Result",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 46,
              "src": "147:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Result_$46_storage_ptr",
                "typeString": "struct PredictionMarket.Result"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 50,
            "mutability": "mutable",
            "name": "electionFinished",
            "nodeType": "VariableDeclaration",
            "scope": 207,
            "src": "165:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 49,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "165:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "7e0ecc00",
            "id": 54,
            "mutability": "mutable",
            "name": "bets",
            "nodeType": "VariableDeclaration",
            "scope": 207,
            "src": "193:33:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
              "typeString": "mapping(enum PredictionMarket.Side => uint256)"
            },
            "typeName": {
              "id": 53,
              "keyType": {
                "id": 51,
                "name": "Side",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 41,
                "src": "201:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Side_$41",
                  "typeString": "enum PredictionMarket.Side"
                }
              },
              "nodeType": "Mapping",
              "src": "193:21:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                "typeString": "mapping(enum PredictionMarket.Side => uint256)"
              },
              "valueType": {
                "id": 52,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "209:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9d5a3739",
            "id": 60,
            "mutability": "mutable",
            "name": "betsPerGambler",
            "nodeType": "VariableDeclaration",
            "scope": 207,
            "src": "231:63:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$41_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
            },
            "typeName": {
              "id": 59,
              "keyType": {
                "id": 55,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "239:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "231:41:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$41_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
              },
              "valueType": {
                "id": 58,
                "keyType": {
                  "id": 56,
                  "name": "Side",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 41,
                  "src": "258:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$41",
                    "typeString": "enum PredictionMarket.Side"
                  }
                },
                "nodeType": "Mapping",
                "src": "250:21:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                  "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                },
                "valueType": {
                  "id": 57,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "266:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7dc0d1d0",
            "id": 62,
            "mutability": "mutable",
            "name": "oracle",
            "nodeType": "VariableDeclaration",
            "scope": 207,
            "src": "299:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 61,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "299:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 71,
              "nodeType": "Block",
              "src": "356:30:1",
              "statements": [
                {
                  "expression": {
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 67,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "363:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 68,
                      "name": "_oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "372:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "363:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "363:16:1"
                }
              ]
            },
            "id": 72,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nodeType": "VariableDeclaration",
                  "scope": 72,
                  "src": "339:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "339:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "338:17:1"
            },
            "returnParameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "356:0:1"
            },
            "scope": 207,
            "src": "327:59:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "439:155:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 78,
                          "name": "electionFinished",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "454:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 79,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "474:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "454:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "656c656374696f6e2069732066696e6973686564",
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "481:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b986f5898326f417b081556bd907c58c5b8ef0652fc690b771b44307f001565f",
                          "typeString": "literal_string \"election is finished\""
                        },
                        "value": "election is finished"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b986f5898326f417b081556bd907c58c5b8ef0652fc690b771b44307f001565f",
                          "typeString": "literal_string \"election is finished\""
                        }
                      ],
                      "id": 77,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "446:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "446:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "446:58:1"
                },
                {
                  "expression": {
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 84,
                        "name": "bets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "511:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                          "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                        }
                      },
                      "id": 86,
                      "indexExpression": {
                        "id": 85,
                        "name": "_side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "516:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$41",
                          "typeString": "enum PredictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "511:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 87,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "526:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "526:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "511:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "511:24:1"
                },
                {
                  "expression": {
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 91,
                          "name": "betsPerGambler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "542:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$41_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                          }
                        },
                        "id": 95,
                        "indexExpression": {
                          "expression": {
                            "id": 92,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "557:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "557:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "542:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                          "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                        }
                      },
                      "id": 96,
                      "indexExpression": {
                        "id": 94,
                        "name": "_side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "569:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$41",
                          "typeString": "enum PredictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "542:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 97,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "579:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 98,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "579:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "542:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "542:46:1"
                }
              ]
            },
            "functionSelector": "43046844",
            "id": 102,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "placeBet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "_side",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "410:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$41",
                    "typeString": "enum PredictionMarket.Side"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "Side",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 41,
                    "src": "410:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$41",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "409:12:1"
            },
            "returnParameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "439:0:1"
            },
            "scope": 207,
            "src": "392:202:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 173,
              "nodeType": "Block",
              "src": "633:423:1",
              "statements": [
                {
                  "assignments": [
                    106
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 106,
                      "mutability": "mutable",
                      "name": "gamblerBet",
                      "nodeType": "VariableDeclaration",
                      "scope": 173,
                      "src": "640:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 105,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "640:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 114,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 107,
                        "name": "betsPerGambler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "658:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$41_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                        }
                      },
                      "id": 110,
                      "indexExpression": {
                        "expression": {
                          "id": 108,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "673:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "673:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "658:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                        "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                      }
                    },
                    "id": 113,
                    "indexExpression": {
                      "expression": {
                        "id": 111,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "685:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$46_storage",
                          "typeString": "struct PredictionMarket.Result storage ref"
                        }
                      },
                      "id": 112,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "winner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43,
                      "src": "685:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$41",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "658:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "640:59:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 116,
                          "name": "gamblerBet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "714:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "727:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "714:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f7520646f206e6f74206861766520616e792077696e6e696e6720626574",
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "730:33:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_580c326cdba3173fc617bf584c3e1a4fdc48208658005920e02bf236cdbddda5",
                          "typeString": "literal_string \"you do not have any winning bet\""
                        },
                        "value": "you do not have any winning bet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_580c326cdba3173fc617bf584c3e1a4fdc48208658005920e02bf236cdbddda5",
                          "typeString": "literal_string \"you do not have any winning bet\""
                        }
                      ],
                      "id": 115,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "706:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "706:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "706:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 123,
                          "name": "electionFinished",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "781:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "801:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "781:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "656c656374696f6e206e6f742066696e697368656420796574",
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "807:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3bf64ace83af0c7f2f5718c99813c9567dda3aba9dcae027a45a0272079acbcb",
                          "typeString": "literal_string \"election not finished yet\""
                        },
                        "value": "election not finished yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3bf64ace83af0c7f2f5718c99813c9567dda3aba9dcae027a45a0272079acbcb",
                          "typeString": "literal_string \"election not finished yet\""
                        }
                      ],
                      "id": 122,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "773:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "773:62:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "773:62:1"
                },
                {
                  "assignments": [
                    130
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 130,
                      "mutability": "mutable",
                      "name": "gain",
                      "nodeType": "VariableDeclaration",
                      "scope": 173,
                      "src": "842:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 129,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "842:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 144,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 131,
                      "name": "gamblerBet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "854:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 132,
                            "name": "bets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "867:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                              "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                            }
                          },
                          "id": 135,
                          "indexExpression": {
                            "expression": {
                              "id": 133,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "872:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Result_$46_storage",
                                "typeString": "struct PredictionMarket.Result storage ref"
                              }
                            },
                            "id": 134,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "loser",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45,
                            "src": "872:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Side_$41",
                              "typeString": "enum PredictionMarket.Side"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "867:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 136,
                          "name": "gamblerBet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "888:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "867:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "baseExpression": {
                          "id": 138,
                          "name": "bets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "901:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                            "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                          }
                        },
                        "id": 141,
                        "indexExpression": {
                          "expression": {
                            "id": 139,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "906:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Result_$46_storage",
                              "typeString": "struct PredictionMarket.Result storage ref"
                            }
                          },
                          "id": 140,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "winner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43,
                          "src": "906:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Side_$41",
                            "typeString": "enum PredictionMarket.Side"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "901:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "867:53:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "854:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "842:78:1"
                },
                {
                  "expression": {
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 145,
                          "name": "betsPerGambler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "927:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$41_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                          }
                        },
                        "id": 150,
                        "indexExpression": {
                          "expression": {
                            "id": 146,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "942:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "942:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "927:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                          "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                        }
                      },
                      "id": 151,
                      "indexExpression": {
                        "expression": {
                          "id": 148,
                          "name": "Side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "954:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Side_$41_$",
                            "typeString": "type(enum PredictionMarket.Side)"
                          }
                        },
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Biden",
                        "nodeType": "MemberAccess",
                        "src": "954:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$41",
                          "typeString": "enum PredictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "927:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "968:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "927:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "927:42:1"
                },
                {
                  "expression": {
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 155,
                          "name": "betsPerGambler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "976:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$41_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                          }
                        },
                        "id": 160,
                        "indexExpression": {
                          "expression": {
                            "id": 156,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "991:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "991:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "976:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                          "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                        }
                      },
                      "id": 161,
                      "indexExpression": {
                        "expression": {
                          "id": 158,
                          "name": "Side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "1003:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Side_$41_$",
                            "typeString": "type(enum PredictionMarket.Side)"
                          }
                        },
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Trump",
                        "nodeType": "MemberAccess",
                        "src": "1003:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$41",
                          "typeString": "enum PredictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "976:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1017:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "976:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "976:42:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 170,
                        "name": "gain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130,
                        "src": "1045:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 165,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1025:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1025:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1025:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1025:25:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "1025:25:1"
                }
              ]
            },
            "functionSelector": "2b539c86",
            "id": 174,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawGain",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "621:2:1"
            },
            "returnParameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "633:0:1"
            },
            "scope": 207,
            "src": "600:456:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 205,
              "nodeType": "Block",
              "src": "1120:145:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 182,
                          "name": "oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "1135:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 183,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1145:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1145:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1135:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79206f7261636c65",
                        "id": 186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1157:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc6b85902536b0f8487034b3ecf1e60a795dc2f76885f36df68d2eea7b0bd42d",
                          "typeString": "literal_string \"only oracle\""
                        },
                        "value": "only oracle"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dc6b85902536b0f8487034b3ecf1e60a795dc2f76885f36df68d2eea7b0bd42d",
                          "typeString": "literal_string \"only oracle\""
                        }
                      ],
                      "id": 181,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1127:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1127:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 188,
                  "nodeType": "ExpressionStatement",
                  "src": "1127:44:1"
                },
                {
                  "expression": {
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 189,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "1178:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$46_storage",
                          "typeString": "struct PredictionMarket.Result storage ref"
                        }
                      },
                      "id": 191,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "winner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43,
                      "src": "1178:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$41",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 192,
                      "name": "_winner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 176,
                      "src": "1194:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$41",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "src": "1178:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$41",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "1178:23:1"
                },
                {
                  "expression": {
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 195,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "1208:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$46_storage",
                          "typeString": "struct PredictionMarket.Result storage ref"
                        }
                      },
                      "id": 197,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "loser",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45,
                      "src": "1208:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$41",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 198,
                      "name": "_loser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 178,
                      "src": "1223:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$41",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "src": "1208:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$41",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "1208:21:1"
                },
                {
                  "expression": {
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 201,
                      "name": "electionFinished",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "1236:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1255:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1236:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "1236:23:1"
                }
              ]
            },
            "functionSelector": "4ec942b7",
            "id": 206,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reportResult",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 176,
                  "mutability": "mutable",
                  "name": "_winner",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "1084:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$41",
                    "typeString": "enum PredictionMarket.Side"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "Side",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 41,
                    "src": "1084:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$41",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 178,
                  "mutability": "mutable",
                  "name": "_loser",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "1098:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$41",
                    "typeString": "enum PredictionMarket.Side"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "Side",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 41,
                    "src": "1098:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$41",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1083:27:1"
            },
            "returnParameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1120:0:1"
            },
            "scope": 207,
            "src": "1062:203:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 208,
        "src": "27:1241:1"
      }
    ],
    "src": "0:1268:1"
  },
  "legacyAST": {
    "absolutePath": "/D/Projects for Resume/Decentralized Prediction Market/contracts/PredictionMarket.sol",
    "exportedSymbols": {
      "PredictionMarket": [
        207
      ]
    },
    "id": 208,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 38,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 207,
        "linearizedBaseContracts": [
          207
        ],
        "name": "PredictionMarket",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "PredictionMarket.Side",
            "id": 41,
            "members": [
              {
                "id": 39,
                "name": "Biden",
                "nodeType": "EnumValue",
                "src": "70:5:1"
              },
              {
                "id": 40,
                "name": "Trump",
                "nodeType": "EnumValue",
                "src": "77:5:1"
              }
            ],
            "name": "Side",
            "nodeType": "EnumDefinition",
            "src": "58:26:1"
          },
          {
            "canonicalName": "PredictionMarket.Result",
            "id": 46,
            "members": [
              {
                "constant": false,
                "id": 43,
                "mutability": "mutable",
                "name": "winner",
                "nodeType": "VariableDeclaration",
                "scope": 46,
                "src": "109:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Side_$41",
                  "typeString": "enum PredictionMarket.Side"
                },
                "typeName": {
                  "id": 42,
                  "name": "Side",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 41,
                  "src": "109:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$41",
                    "typeString": "enum PredictionMarket.Side"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45,
                "mutability": "mutable",
                "name": "loser",
                "nodeType": "VariableDeclaration",
                "scope": 46,
                "src": "127:10:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Side_$41",
                  "typeString": "enum PredictionMarket.Side"
                },
                "typeName": {
                  "id": 44,
                  "name": "Side",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 41,
                  "src": "127:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$41",
                    "typeString": "enum PredictionMarket.Side"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Result",
            "nodeType": "StructDefinition",
            "scope": 207,
            "src": "88:55:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 48,
            "mutability": "mutable",
            "name": "result",
            "nodeType": "VariableDeclaration",
            "scope": 207,
            "src": "147:13:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Result_$46_storage",
              "typeString": "struct PredictionMarket.Result"
            },
            "typeName": {
              "id": 47,
              "name": "Result",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 46,
              "src": "147:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Result_$46_storage_ptr",
                "typeString": "struct PredictionMarket.Result"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 50,
            "mutability": "mutable",
            "name": "electionFinished",
            "nodeType": "VariableDeclaration",
            "scope": 207,
            "src": "165:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 49,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "165:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "7e0ecc00",
            "id": 54,
            "mutability": "mutable",
            "name": "bets",
            "nodeType": "VariableDeclaration",
            "scope": 207,
            "src": "193:33:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
              "typeString": "mapping(enum PredictionMarket.Side => uint256)"
            },
            "typeName": {
              "id": 53,
              "keyType": {
                "id": 51,
                "name": "Side",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 41,
                "src": "201:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Side_$41",
                  "typeString": "enum PredictionMarket.Side"
                }
              },
              "nodeType": "Mapping",
              "src": "193:21:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                "typeString": "mapping(enum PredictionMarket.Side => uint256)"
              },
              "valueType": {
                "id": 52,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "209:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9d5a3739",
            "id": 60,
            "mutability": "mutable",
            "name": "betsPerGambler",
            "nodeType": "VariableDeclaration",
            "scope": 207,
            "src": "231:63:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$41_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
            },
            "typeName": {
              "id": 59,
              "keyType": {
                "id": 55,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "239:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "231:41:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$41_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
              },
              "valueType": {
                "id": 58,
                "keyType": {
                  "id": 56,
                  "name": "Side",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 41,
                  "src": "258:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$41",
                    "typeString": "enum PredictionMarket.Side"
                  }
                },
                "nodeType": "Mapping",
                "src": "250:21:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                  "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                },
                "valueType": {
                  "id": 57,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "266:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7dc0d1d0",
            "id": 62,
            "mutability": "mutable",
            "name": "oracle",
            "nodeType": "VariableDeclaration",
            "scope": 207,
            "src": "299:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 61,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "299:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 71,
              "nodeType": "Block",
              "src": "356:30:1",
              "statements": [
                {
                  "expression": {
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 67,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "363:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 68,
                      "name": "_oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "372:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "363:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "363:16:1"
                }
              ]
            },
            "id": 72,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nodeType": "VariableDeclaration",
                  "scope": 72,
                  "src": "339:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "339:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "338:17:1"
            },
            "returnParameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "356:0:1"
            },
            "scope": 207,
            "src": "327:59:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 101,
              "nodeType": "Block",
              "src": "439:155:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 78,
                          "name": "electionFinished",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "454:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 79,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "474:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "454:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "656c656374696f6e2069732066696e6973686564",
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "481:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b986f5898326f417b081556bd907c58c5b8ef0652fc690b771b44307f001565f",
                          "typeString": "literal_string \"election is finished\""
                        },
                        "value": "election is finished"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b986f5898326f417b081556bd907c58c5b8ef0652fc690b771b44307f001565f",
                          "typeString": "literal_string \"election is finished\""
                        }
                      ],
                      "id": 77,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "446:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "446:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "446:58:1"
                },
                {
                  "expression": {
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 84,
                        "name": "bets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "511:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                          "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                        }
                      },
                      "id": 86,
                      "indexExpression": {
                        "id": 85,
                        "name": "_side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "516:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$41",
                          "typeString": "enum PredictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "511:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 87,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "526:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "526:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "511:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "511:24:1"
                },
                {
                  "expression": {
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 91,
                          "name": "betsPerGambler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "542:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$41_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                          }
                        },
                        "id": 95,
                        "indexExpression": {
                          "expression": {
                            "id": 92,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "557:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "557:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "542:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                          "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                        }
                      },
                      "id": 96,
                      "indexExpression": {
                        "id": 94,
                        "name": "_side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "569:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$41",
                          "typeString": "enum PredictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "542:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 97,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "579:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 98,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "579:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "542:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "542:46:1"
                }
              ]
            },
            "functionSelector": "43046844",
            "id": 102,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "placeBet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "_side",
                  "nodeType": "VariableDeclaration",
                  "scope": 102,
                  "src": "410:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$41",
                    "typeString": "enum PredictionMarket.Side"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "Side",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 41,
                    "src": "410:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$41",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "409:12:1"
            },
            "returnParameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "439:0:1"
            },
            "scope": 207,
            "src": "392:202:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 173,
              "nodeType": "Block",
              "src": "633:423:1",
              "statements": [
                {
                  "assignments": [
                    106
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 106,
                      "mutability": "mutable",
                      "name": "gamblerBet",
                      "nodeType": "VariableDeclaration",
                      "scope": 173,
                      "src": "640:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 105,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "640:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 114,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 107,
                        "name": "betsPerGambler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "658:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$41_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                        }
                      },
                      "id": 110,
                      "indexExpression": {
                        "expression": {
                          "id": 108,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "673:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "673:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "658:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                        "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                      }
                    },
                    "id": 113,
                    "indexExpression": {
                      "expression": {
                        "id": 111,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "685:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$46_storage",
                          "typeString": "struct PredictionMarket.Result storage ref"
                        }
                      },
                      "id": 112,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "winner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43,
                      "src": "685:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$41",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "658:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "640:59:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 116,
                          "name": "gamblerBet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "714:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "727:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "714:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f7520646f206e6f74206861766520616e792077696e6e696e6720626574",
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "730:33:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_580c326cdba3173fc617bf584c3e1a4fdc48208658005920e02bf236cdbddda5",
                          "typeString": "literal_string \"you do not have any winning bet\""
                        },
                        "value": "you do not have any winning bet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_580c326cdba3173fc617bf584c3e1a4fdc48208658005920e02bf236cdbddda5",
                          "typeString": "literal_string \"you do not have any winning bet\""
                        }
                      ],
                      "id": 115,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "706:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "706:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "706:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 123,
                          "name": "electionFinished",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "781:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "801:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "781:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "656c656374696f6e206e6f742066696e697368656420796574",
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "807:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3bf64ace83af0c7f2f5718c99813c9567dda3aba9dcae027a45a0272079acbcb",
                          "typeString": "literal_string \"election not finished yet\""
                        },
                        "value": "election not finished yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3bf64ace83af0c7f2f5718c99813c9567dda3aba9dcae027a45a0272079acbcb",
                          "typeString": "literal_string \"election not finished yet\""
                        }
                      ],
                      "id": 122,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "773:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "773:62:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "773:62:1"
                },
                {
                  "assignments": [
                    130
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 130,
                      "mutability": "mutable",
                      "name": "gain",
                      "nodeType": "VariableDeclaration",
                      "scope": 173,
                      "src": "842:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 129,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "842:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 144,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 131,
                      "name": "gamblerBet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "854:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 132,
                            "name": "bets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "867:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                              "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                            }
                          },
                          "id": 135,
                          "indexExpression": {
                            "expression": {
                              "id": 133,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "872:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Result_$46_storage",
                                "typeString": "struct PredictionMarket.Result storage ref"
                              }
                            },
                            "id": 134,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "loser",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45,
                            "src": "872:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Side_$41",
                              "typeString": "enum PredictionMarket.Side"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "867:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 136,
                          "name": "gamblerBet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "888:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "867:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "baseExpression": {
                          "id": 138,
                          "name": "bets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "901:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                            "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                          }
                        },
                        "id": 141,
                        "indexExpression": {
                          "expression": {
                            "id": 139,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "906:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Result_$46_storage",
                              "typeString": "struct PredictionMarket.Result storage ref"
                            }
                          },
                          "id": 140,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "winner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43,
                          "src": "906:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Side_$41",
                            "typeString": "enum PredictionMarket.Side"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "901:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "867:53:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "854:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "842:78:1"
                },
                {
                  "expression": {
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 145,
                          "name": "betsPerGambler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "927:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$41_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                          }
                        },
                        "id": 150,
                        "indexExpression": {
                          "expression": {
                            "id": 146,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "942:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "942:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "927:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                          "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                        }
                      },
                      "id": 151,
                      "indexExpression": {
                        "expression": {
                          "id": 148,
                          "name": "Side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "954:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Side_$41_$",
                            "typeString": "type(enum PredictionMarket.Side)"
                          }
                        },
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Biden",
                        "nodeType": "MemberAccess",
                        "src": "954:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$41",
                          "typeString": "enum PredictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "927:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "968:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "927:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "927:42:1"
                },
                {
                  "expression": {
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 155,
                          "name": "betsPerGambler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "976:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$41_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                          }
                        },
                        "id": 160,
                        "indexExpression": {
                          "expression": {
                            "id": 156,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "991:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "991:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "976:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$41_$_t_uint256_$",
                          "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                        }
                      },
                      "id": 161,
                      "indexExpression": {
                        "expression": {
                          "id": 158,
                          "name": "Side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "1003:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Side_$41_$",
                            "typeString": "type(enum PredictionMarket.Side)"
                          }
                        },
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Trump",
                        "nodeType": "MemberAccess",
                        "src": "1003:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$41",
                          "typeString": "enum PredictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "976:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1017:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "976:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "976:42:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 170,
                        "name": "gain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130,
                        "src": "1045:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 165,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1025:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1025:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1025:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1025:25:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "1025:25:1"
                }
              ]
            },
            "functionSelector": "2b539c86",
            "id": 174,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawGain",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "621:2:1"
            },
            "returnParameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "633:0:1"
            },
            "scope": 207,
            "src": "600:456:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 205,
              "nodeType": "Block",
              "src": "1120:145:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 182,
                          "name": "oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "1135:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 183,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1145:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1145:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1135:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79206f7261636c65",
                        "id": 186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1157:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc6b85902536b0f8487034b3ecf1e60a795dc2f76885f36df68d2eea7b0bd42d",
                          "typeString": "literal_string \"only oracle\""
                        },
                        "value": "only oracle"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dc6b85902536b0f8487034b3ecf1e60a795dc2f76885f36df68d2eea7b0bd42d",
                          "typeString": "literal_string \"only oracle\""
                        }
                      ],
                      "id": 181,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1127:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1127:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 188,
                  "nodeType": "ExpressionStatement",
                  "src": "1127:44:1"
                },
                {
                  "expression": {
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 189,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "1178:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$46_storage",
                          "typeString": "struct PredictionMarket.Result storage ref"
                        }
                      },
                      "id": 191,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "winner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43,
                      "src": "1178:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$41",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 192,
                      "name": "_winner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 176,
                      "src": "1194:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$41",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "src": "1178:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$41",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "1178:23:1"
                },
                {
                  "expression": {
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 195,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "1208:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$46_storage",
                          "typeString": "struct PredictionMarket.Result storage ref"
                        }
                      },
                      "id": 197,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "loser",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45,
                      "src": "1208:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$41",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 198,
                      "name": "_loser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 178,
                      "src": "1223:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$41",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "src": "1208:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$41",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "1208:21:1"
                },
                {
                  "expression": {
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 201,
                      "name": "electionFinished",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "1236:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1255:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1236:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "1236:23:1"
                }
              ]
            },
            "functionSelector": "4ec942b7",
            "id": 206,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reportResult",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 176,
                  "mutability": "mutable",
                  "name": "_winner",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "1084:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$41",
                    "typeString": "enum PredictionMarket.Side"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "Side",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 41,
                    "src": "1084:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$41",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 178,
                  "mutability": "mutable",
                  "name": "_loser",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "1098:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$41",
                    "typeString": "enum PredictionMarket.Side"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "Side",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 41,
                    "src": "1098:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$41",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1083:27:1"
            },
            "returnParameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1120:0:1"
            },
            "scope": 207,
            "src": "1062:203:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 208,
        "src": "27:1241:1"
      }
    ],
    "src": "0:1268:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.1+commit.f4a555be.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0x15bF588dE1F2A354690836daC4202bDDf8c85961",
      "transactionHash": "0x4034c48816b94fbcb4044b3d782b9d5f5792fe6dda9e247404b23b4b298cf11f"
    },
    "4": {
      "events": {},
      "links": {},
      "address": "0x5d1FE4E4c4E10775A110a52Bc690dBf1C40b87bE",
      "transactionHash": "0x5b3d1cbf02d3b376a9c4e9e8481593027ef70abf1db1bc06e2b27784f62d40dc"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0xAcF3671631E1046F60D2d06E0Cb8a3dD51152F4d",
      "transactionHash": "0x5b7b7a1e6f977685d736f11e67b34773ec752b76fd1466a610be4a25cb314b60"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-10-25T16:24:00.174Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}